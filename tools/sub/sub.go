package main

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/joho/godotenv"
	"github.com/robpaul9/cloud-object-malware-scanner/adapters/redis"
	"github.com/robpaul9/cloud-object-malware-scanner/config"
)

func main() {

	err := godotenv.Load()
	if err != nil {
		panic("no .env file found")
	}

	config := config.NewConfig()

	redisInterface := redis.New(&redis.Config{
		Logger:        config.Logger,
		RedisPort:     config.RedisPort,
		RedisHost:     config.RedisHost,
		RedisPassword: config.RedisPassword,
		RedisDatabase: config.RedisDatabase,
	})

	ctx := context.Background()

	s := redisInterface.Client.Subscribe(ctx, config.PubSubTopic)

	var msg interface{}

	fmt.Printf("listening for messages on channel: %s...\r\n", config.PubSubTopic)

	for {
		m, err := s.ReceiveMessage(ctx)
		if err != nil {
			panic(err)
		}

		if err := json.Unmarshal([]byte(m.Payload), &msg); err != nil {
			panic(err)
		}

		fmt.Println("Received message from " + m.Channel + " channel.")
		fmt.Printf("%+v\n", msg)
	}

}
