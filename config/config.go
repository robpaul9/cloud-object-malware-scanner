package config

import (
	"os"
	"time"

	goenv "github.com/robpaul9/goenv"
	log "github.com/robpaul9/golog"
)

type Config struct {
	ServiceName         string
	ServicePort         string
	PubSubTopic         string
	GCPProject          string
	AWSRegion           string
	MetadefenderAPIKey  string
	DBName              string
	DBHost              string
	DBPort              string
	DBUser              string
	DBPassword          string
	MaxWorkers          int
	MaxQueue            int
	RedisPort           string
	RedisHost           string
	RedisPassword       string
	RedisDatabase       int
	Logger              log.Logger
	MetadefenderTimeout time.Duration
}

func NewConfig() *Config {
	return &Config{
		ServiceName:         goenv.GetString("SERVICE_NAME"),
		ServicePort:         goenv.GetString("SERVICE_PORT"),
		MetadefenderAPIKey:  goenv.GetString("METADEFENDER_API_KEY"),
		PubSubTopic:         goenv.GetString("PUB_SUB_TOPIC"),
		GCPProject:          goenv.GetString("GCP_PROJECT"),
		AWSRegion:           goenv.GetString("AWS_REGION"),
		DBName:              goenv.GetString("DATABASE_NAME"),
		DBHost:              goenv.GetString("DATABASE_HOST"),
		DBPassword:          goenv.GetString("DATABASE_PASSWORD"),
		DBUser:              goenv.GetString("DATABASE_USER"),
		DBPort:              goenv.GetString("DATABASE_PORT"),
		Logger:              log.New(log.Config{ServiceName: os.Getenv("SERVICE_NAME")}),
		MaxWorkers:          goenv.MustGetInt("MAX_WORKERS"),
		MaxQueue:            goenv.MustGetInt("MAX_QUEUE"),
		RedisPort:           goenv.GetString("REDIS_PORT"),
		RedisHost:           goenv.GetString("REDIS_HOST"),
		RedisPassword:       goenv.GetString("REDIS_PASSWORD"),
		RedisDatabase:       goenv.MustGetInt("REDIS_DATABASE"),
		MetadefenderTimeout: 360,
	}
}
